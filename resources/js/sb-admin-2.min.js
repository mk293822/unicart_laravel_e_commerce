/*!
 * Start Bootstrap - SB Admin 2 v4.1.3 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */

!function (l) {
    "use strict";
    l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) {
        l("body").toggleClass("sidebar-toggled"), l(".sidebar").toggleClass("toggled"), l(".sidebar").hasClass("toggled") && l(".sidebar .collapse").collapse("hide")
    }), l(window).resize(function () {
        l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"),
            l(window).width() < 480 && !l(".sidebar").hasClass("toggled") && (l("body").addClass("sidebar-toggled"),
                l(".sidebar").addClass("toggled"),
                l(".sidebar .collapse").collapse("hide"))
    }), l("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) {
        var o; 768 < l(window).width() && (o = (o = e.originalEvent).wheelDelta || -o.detail, this.scrollTop += 30 * (o < 0 ? 1 : -1), e.preventDefault())
    }), l(document).on("scroll", function () {
        100 < l(this).scrollTop() ? l(".scroll-to-top").fadeIn() : l(".scroll-to-top").fadeOut()
    }), l(document).on("click", "a.scroll-to-top", function (e) {
        var o = l(this); l("html, body").stop().animate({
            scrollTop: l(o.attr("href")).offset().top
        }, 1e3, "easeInOutExpo"), e.preventDefault()
    })
}(jQuery);





// Search and sorting functionality
const navSearch = document.querySelector('.navbar-search');
const sort = document.querySelector('.sort');

// Function to combine and update the URL with both search and sort parameters
function urlWorkingTogether() {
    const url = new URL(window.location.href);
    const params = new URLSearchParams(url.search);

    // Get values from navSearch and sort forms
    const q = navSearch.querySelector('input[name="q"]')?.value;
    const s = sort.querySelector('select[name="s"]')?.value;
    const direction = sort.querySelector('select[name="direction"]')?.value;

    // If there's a search query, set it
    if (q) {
        params.set('q', q);
    } else {
        params.delete('q');
    }

    // If there's a sort parameter, set it
    if (s) {
        params.set('s', s);
    }

    // If there's a direction, set it
    if (direction) {
        params.set('direction', direction);
    }

    window.history.replaceState({}, '', url.pathname + '?' + params.toString());

    // Reload the page with the updated URL
    location.reload();
}

// Event listener for navSearch form
navSearch.addEventListener('submit', (e) => {
    e.preventDefault();
    urlWorkingTogether();
});

// Event listener for sort form
sort.addEventListener('change', (e) => {
    e.preventDefault();
    urlWorkingTogether();
});
